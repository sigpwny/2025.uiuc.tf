import{a3 as C}from"./template.BGKbqTa9.js";import{n as i}from"./router.DnZMHVsn.js";const G={1:["e1cb06adaad576536381bb880762f5640d6be957d8c2fba4750c76e1b95cfa3c"],2:["230d4f0c515eea7cfdf52c505361badee3846a3d33ab4406ea1241af0db91acc"],4:["ee462d9b0d754dc25f36a48d94f98378f7d92e73dba5a7a7fb7439bc2ed62ed9"],5:["a0e9acc2e5555c4979cb95bd538a272eb5eefdf3fd06b3d6d77fc98ca32d5354"],6:["590b3040907b110a75bf7fbca319af33db745ca09360b8a594f35b432cce45b2"],7:["ee984e8caf1ee062ee9ab429648d26784cd8222ecade08b100af4bf88e98116f"],8:["55c7218d5ff3ac1c00bc10c2f57a03d1d50190a207d63b27d4297f402155569a"],9:["f0ab74a3b072d75115ac9b1f7053c0db1d8156bb42ba130e53b2c56c186bedaa"],10:["ef73633eb448388368abca854e9698d81ed994a91a467998de0af4d0a26fbed5"],11:["735acd1f7839679a01be32e4179ced5e8400c9ab860bcc461cc89b5e5025afce"],12:["ce9703d6965082335c479f3cc9e38eb8206ee0b54e440bef56d34b04c89b3981"],13:["4b2bef46e48a034191421ca27a7c886688f586f79d4b80b96883253849d916d3","49a1eb2a77f0ae885f1166fb0254fdad7f9c8e7766f57cc4df1b4cfd278cac2e"],14:["b7556738253a03f08deea1a3777cadadec82c947dc9127ebbcc205a360679d98","c5fd3afb7f919827629ee0b23af8ee563036505166343001f42e9999936dfc2a"],15:["f395151465a7b7704890e74741f70f9940ce9911233e8fea577c832599e8eef1"],16:["88d136faf20b1c61e842d7854b3da0c22b90bd48110753045d5cf1df42e7108c"],17:["9ab9ceaed45692718fb27bf4150ce52b56864a24db3fcb30bfe7b7ff8dcb313a","a3c8e13024cf25c77436ba3a50cc7342234130b3edd5d71c9f2caac6530c82f7","8f9bfa9449dd1dacc777c3d8e18d7516f69e3be3931d127d876768513fa17413"],18:["530a064dd7b6484f3b7db6370a2b997728fcb2cab5f87658a4261f909345cea5","2820dcb749f8d96ecea03119a25a27473b979cd737bc5c6a401eca3b5a9c434a","b8d74a09820dcd04d66c60b38dca05736f95a9a5fe4938f8c29ca7b76ff9ec2a","0cdd1cdf9f87459670789192c14d6a5cf049192467939dda0d7037e730978aa6"],20:["e771389da852484ffc192500cb10ca2afcc3921077d7fe4bf80bb5b8b7e8dc87"],21:["1453aebf381342b0c85127d94b1ee96f57e5042d2224a923791e20606b62d585","4fe9a8fccd02f868f08caeed2096f7d98f639eb240dc6e80e7f6da5a1baa6d55"],22:["26fd70a9cf2d79feed361071cc1bf345e0feca6cb441eb1eda67317754a97067"],23:["8e6ba52b244f758c118bb718c3875dce54b6e11a8517a600b205cb6f67d1bda6"],24:["9710ba19481eae2a3c0e79c5f4b8d048e7426a3d5d4f15efe7337fdc1188f140"],25:["f80838c7f63771ff433742850bf8765262230f9d1ef1a5ac5f87403a4f3998c5"],26:["76de1d971401c7cbeb75a8abfc011045489a5e8fa3ed4dc8844ff9cf992604a6"],27:["57183a71fa6780599524737e0ec0c9ea53a726e208fe78bcd9b11244bf20a709","bc41231b4a2925ba3976ca1b10eaaeb945c5ff215476d412c498fb7d38e79aab"],28:["1496f2fbf2e1f7ae7f3fb7989479bde383fd28712813a367c1f0585f14a91bec"],29:["f162ad12e16d2378e7c5a817d950e8489452ffd8e46a7367dacdeaaa07d4de79"],30:["c44ddd13a5fb94dfe503a6f07cedc56850c5574c10288603df040a61abb7094e"],31:["976c0413e6f916f1c04123cdee74a4387b0b5cb7669d93d5eef4d2c7db8a8f88","280414d02499862dca2f79e521910ce91d6022a76bd9c2e68ae02c1e013e6495"],32:["fe7ce1dadb866f1b0304336d23bd8d8717155b8417d70cbbb9660c1ff7ab6098","34c4c847f6196a19b0e1ca64cfba45cf7e4caca5982bb97b4215708c1a26401d","7337ec7e454d2831bed1f8c647f6499a270638757553a25ffd2883f4f5e61db1","35c6f1ad53ca4c95d6f4bafabc64d63d2d065d6120891eda05a2a9d5852333cb"],33:["33168940217ddba80cea35188d3976a1808bba0f96ed26044e5c9fb5efa4a581"],34:["caa97a6615e4a6f8174508e215d4903e525302fcabfaad763f5d712a8c311f3d"]},S=G;class w{baseUrl="/api/v1";securityData=null;securityWorker;abortControllers=new Map;customFetch=(...e)=>fetch(...e);baseApiParams={credentials:"same-origin",headers:{},redirect:"follow",referrerPolicy:"no-referrer"};constructor(e={}){Object.assign(this,e)}setSecurityData=e=>{this.securityData=e};encodeQueryParam(e,t){return`${encodeURIComponent(e)}=${encodeURIComponent(typeof t=="number"?t:`${t}`)}`}addQueryParam(e,t){return this.encodeQueryParam(t,e[t])}addArrayQueryParam(e,t){return e[t].map(s=>this.encodeQueryParam(t,s)).join("&")}toQueryString(e){const t=e||{};return Object.keys(t).filter(s=>typeof t[s]<"u").map(s=>Array.isArray(t[s])?this.addArrayQueryParam(t,s):this.addQueryParam(t,s)).join("&")}addQueryParams(e){const t=this.toQueryString(e);return t?`?${t}`:""}contentFormatters={"application/json":e=>e!==null&&(typeof e=="object"||typeof e=="string")?JSON.stringify(e):e,"text/plain":e=>e!==null&&typeof e!="string"?JSON.stringify(e):e,"multipart/form-data":e=>Object.keys(e||{}).reduce((t,r)=>{const s=e[r];return t.append(r,s instanceof Blob?s:typeof s=="object"&&s!==null?JSON.stringify(s):`${s}`),t},new FormData),"application/x-www-form-urlencoded":e=>this.toQueryString(e)};mergeRequestParams(e,t){return{...this.baseApiParams,...e,...t||{},headers:{...this.baseApiParams.headers||{},...e.headers||{},...t&&t.headers||{}}}}createAbortSignal=e=>{if(this.abortControllers.has(e)){const r=this.abortControllers.get(e);return r?r.signal:void 0}const t=new AbortController;return this.abortControllers.set(e,t),t.signal};abortRequest=e=>{const t=this.abortControllers.get(e);t&&(t.abort(),this.abortControllers.delete(e))};request=async({body:e,secure:t,path:r,type:s="application/json",query:h,format:f="json",baseUrl:m,cancelToken:u,...l})=>{const L=(typeof t=="boolean"?t:this.baseApiParams.secure)&&this.securityWorker&&await this.securityWorker(this.securityData)||{},d=this.mergeRequestParams(l,L),b=h&&this.toQueryString(h),y=this.contentFormatters[s||"application/json"],T=f||d.format;return this.customFetch(`${m||this.baseUrl||""}${r}${b?`?${b}`:""}`,{...d,credentials:"include",headers:{...d.headers||{},...s&&s!=="multipart/form-data"?{"Content-Type":s}:{}},signal:(u?this.createAbortSignal(u):d.signal)||null,body:typeof e>"u"||e===null?null:y(e)}).then(async p=>{const c=p.clone();c.data=null,c.error=null;const q=T?await p[T]().then(n=>(c.ok?c.data=n:c.error=n,c)).catch(n=>(c.error=n,c)):c;if(u&&this.abortControllers.delete(u),!p.ok)throw q;return q})}}class j extends w{auth={getCsrfToken:(e={})=>this.request({path:"/csrf_token",method:"GET",secure:!0,format:"json",...e}),getConfirm:(e,t={})=>this.request({path:`/confirm/${e}`,method:"GET",secure:!0,format:"json",...t}),postConfirm:(e={})=>this.request({path:"/confirm",method:"POST",secure:!0,format:"json",type:"application/json",...e}),postLogin:(e,t={})=>this.request({path:"/login",method:"POST",body:e,secure:!0,format:"json",type:"application/json",...t}),getLogout:(e={})=>this.request({path:"/logout",method:"GET",secure:!0,format:"json",...e}),postRegister:(e,t={})=>this.request({path:"/register",method:"POST",body:e,secure:!0,format:"json",type:"application/json",...t})};awards={getAwardList:(e,t={})=>this.request({path:"/awards",method:"GET",query:e,secure:!0,format:"json",...t}),postAwardList:(e={})=>this.request({path:"/awards",method:"POST",secure:!0,format:"json",...e}),getAward:(e,t={})=>this.request({path:`/awards/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteAward:(e,t={})=>this.request({path:`/awards/${e}`,method:"DELETE",secure:!0,format:"json",...t})};brackets={getBracketList:(e,t={})=>this.request({path:"/brackets",method:"GET",query:e,secure:!0,...t}),postBracketList:(e={})=>this.request({path:"/brackets",method:"POST",secure:!0,...e}),deleteBracket:(e,t={})=>this.request({path:`/brackets/${e}`,method:"DELETE",secure:!0,...t}),patchBracket:(e,t={})=>this.request({path:`/brackets/${e}`,method:"PATCH",secure:!0,...t})};challenges={getChallengeList:(e,t={})=>this.request({path:"/challenges",method:"GET",query:e,secure:!0,format:"json",...t}),postChallengeList:(e={})=>this.request({path:"/challenges",method:"POST",secure:!0,format:"json",...e}),postChallengeAttempt:async(e,t={})=>{const r=async f=>{const m=new TextEncoder().encode(f),u=await crypto.subtle.digest("SHA-256",m);return Array.from(new Uint8Array(u)).map(l=>l.toString(16).padStart(2,"0")).join("")},s=e?.challenge_id?S[e.challenge_id]:[],h=await r(e?.submission||"");return s?.length?s.includes(h)?{ok:!0,status:200,data:{success:!0,data:{status:"correct",message:"Correct"}}}:{ok:!0,status:200,data:{success:!0,data:{status:"incorrect",message:"Incorrect"}}}:{ok:!0,status:200,data:{success:!0,data:{status:"paused",message:"Flag not archived"}}}},getChallengeTypes:(e={})=>this.request({path:"/challenges/types",method:"GET",secure:!0,...e}),getChallenge:(e,t={})=>this.request({path:`/challenges/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteChallenge:(e,t={})=>this.request({path:`/challenges/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchChallenge:(e,t={})=>this.request({path:`/challenges/${e}`,method:"PATCH",secure:!0,format:"json",...t}),getChallengeFiles:(e,t={})=>this.request({path:`/challenges/${e}/files`,method:"GET",secure:!0,...t}),getChallengeFlags:(e,t={})=>this.request({path:`/challenges/${e}/flags`,method:"GET",secure:!0,...t}),getChallengeHints:(e,t={})=>this.request({path:`/challenges/${e}/hints`,method:"GET",secure:!0,format:"json",...t}),getChallengeRequirements:(e,t={})=>this.request({path:`/challenges/${e}/requirements`,method:"GET",secure:!0,...t}),getChallengeSolves:(e,t={})=>this.request({path:`/challenges/${e}/solves`,method:"GET",secure:!0,...t}),getChallengeTags:(e,t={})=>this.request({path:`/challenges/${e}/tags`,method:"GET",secure:!0,...t}),getChallengeTopics:(e,t={})=>this.request({path:`/challenges/${e}/topics`,method:"GET",secure:!0,...t})};comments={getCommentList:(e,t={})=>this.request({path:"/comments",method:"GET",query:e,secure:!0,format:"json",...t}),postCommentList:(e={})=>this.request({path:"/comments",method:"POST",secure:!0,format:"json",...e}),deleteComment:(e,t={})=>this.request({path:`/comments/${e}`,method:"DELETE",secure:!0,format:"json",...t})};configs={getConfigList:(e,t={})=>this.request({path:"/configs",method:"GET",query:e,secure:!0,format:"json",...t}),postConfigList:(e={})=>this.request({path:"/configs",method:"POST",secure:!0,format:"json",...e}),patchConfigList:(e={})=>this.request({path:"/configs",method:"PATCH",secure:!0,format:"json",...e}),getFieldList:(e,t={})=>this.request({path:"/configs/fields",method:"GET",query:e,secure:!0,...t}),postFieldList:(e={})=>this.request({path:"/configs/fields",method:"POST",secure:!0,...e}),getField:(e,t={})=>this.request({path:`/configs/fields/${e}`,method:"GET",secure:!0,...t}),deleteField:(e,t={})=>this.request({path:`/configs/fields/${e}`,method:"DELETE",secure:!0,...t}),patchField:(e,t={})=>this.request({path:`/configs/fields/${e}`,method:"PATCH",secure:!0,...t}),getConfig:(e,t={})=>this.request({path:`/configs/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteConfig:(e,t={})=>this.request({path:`/configs/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchConfig:(e,t={})=>this.request({path:`/configs/${e}`,method:"PATCH",secure:!0,format:"json",...t})};exports={postExportList:(e={})=>this.request({path:"/exports/raw",method:"POST",secure:!0,...e})};files={getFilesList:(e,t={})=>this.request({path:"/files",method:"GET",query:e,secure:!0,format:"json",...t}),postFilesList:(e,t={})=>this.request({path:"/files",method:"POST",body:e,secure:!0,type:"multipart/form-data",format:"json",...t}),getFilesDetail:(e,t={})=>this.request({path:`/files/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteFilesDetail:(e,t={})=>this.request({path:`/files/${e}`,method:"DELETE",secure:!0,format:"json",...t})};flags={getFlagList:(e,t={})=>this.request({path:"/flags",method:"GET",query:e,secure:!0,format:"json",...t}),postFlagList:(e={})=>this.request({path:"/flags",method:"POST",secure:!0,format:"json",...e}),getFlagTypes:(e={})=>this.request({path:"/flags/types",method:"GET",secure:!0,...e}),getFlagType:(e,t={})=>this.request({path:`/flags/types/${e}`,method:"GET",secure:!0,...t}),getFlag:(e,t={})=>this.request({path:`/flags/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteFlag:(e,t={})=>this.request({path:`/flags/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchFlag:(e,t={})=>this.request({path:`/flags/${e}`,method:"PATCH",secure:!0,format:"json",...t})};hints={getHintList:(e,t={})=>this.request({path:"/hints",method:"GET",query:e,secure:!0,format:"json",...t}),postHintList:(e={})=>this.request({path:"/hints",method:"POST",secure:!0,format:"json",...e}),getHint:(e,t={})=>this.request({path:`/hints/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteHint:(e,t={})=>this.request({path:`/hints/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchHint:(e,t={})=>this.request({path:`/hints/${e}`,method:"PATCH",secure:!0,format:"json",...t})};notifications={headNotificantionList:(e,t={})=>this.request({path:"/notifications",method:"HEAD",query:e,secure:!0,format:"json",...t}),getNotificantionList:(e,t={})=>this.request({path:"/notifications",method:"GET",query:e,secure:!0,format:"json",...t}),postNotificantionList:(e={})=>this.request({path:"/notifications",method:"POST",secure:!0,format:"json",...e}),getNotification:(e,t={})=>this.request({path:`/notifications/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteNotification:(e,t={})=>this.request({path:`/notifications/${e}`,method:"DELETE",secure:!0,format:"json",...t})};pages={getPageList:(e,t={})=>this.request({path:"/pages",method:"GET",query:e,secure:!0,format:"json",...t}),postPageList:(e,t={})=>this.request({path:"/pages",method:"POST",body:e,secure:!0,type:"application/json",format:"json",...t}),getPageDetail:(e,t={})=>this.request({path:`/pages/${e}`,method:"GET",secure:!0,format:"json",...t}),deletePageDetail:(e,t={})=>this.request({path:`/pages/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchPageDetail:(e,t={})=>this.request({path:`/pages/${e}`,method:"PATCH",secure:!0,format:"json",...t})};scoreboard={getScoreboardList:(e={})=>this.request({path:"/scoreboard",method:"GET",secure:!0,format:"json",...e}),getScoreboardDetail:(e,t,r={})=>this.request({path:`/scoreboard/top/${e}`,method:"GET",query:t,secure:!0,format:"json",...r})};shares={postShare:(e={})=>this.request({path:"/shares",method:"POST",secure:!0,...e})};statistics={getChallengeSolveStatistics:(e={})=>this.request({path:"/statistics/challenges/solves",method:"GET",secure:!0,...e}),getChallengeSolvePercentages:(e={})=>this.request({path:"/statistics/challenges/solves/percentages",method:"GET",secure:!0,...e}),getChallengePropertyCounts:(e,t={})=>this.request({path:`/statistics/challenges/${e}`,method:"GET",secure:!0,...t}),getScoresDistribution:(e={})=>this.request({path:"/statistics/scores/distribution",method:"GET",secure:!0,...e}),getSubmissionPropertyCounts:(e,t={})=>this.request({path:`/statistics/submissions/${e}`,method:"GET",secure:!0,...t}),getTeamStatistics:(e={})=>this.request({path:"/statistics/teams",method:"GET",secure:!0,...e}),getUserStatistics:(e={})=>this.request({path:"/statistics/users",method:"GET",secure:!0,...e}),getUserPropertyCounts:(e,t={})=>this.request({path:`/statistics/users/${e}`,method:"GET",secure:!0,...t})};submissions={getSubmissionsList:(e,t={})=>this.request({path:"/submissions",method:"GET",query:e,secure:!0,format:"json",...t}),postSubmissionsList:(e,t={})=>this.request({path:"/submissions",method:"POST",body:e,secure:!0,type:"application/json",format:"json",...t}),getSubmission:(e,t={})=>this.request({path:`/submissions/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteSubmission:(e,t={})=>this.request({path:`/submissions/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchSubmission:(e,t={})=>this.request({path:`/submissions/${e}`,method:"PATCH",secure:!0,format:"json",...t})};tags={getTagList:(e,t={})=>this.request({path:"/tags",method:"GET",query:e,secure:!0,format:"json",...t}),postTagList:(e={})=>this.request({path:"/tags",method:"POST",secure:!0,format:"json",...e}),getTag:(e,t={})=>this.request({path:`/tags/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteTag:(e,t={})=>this.request({path:`/tags/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchTag:(e,t={})=>this.request({path:`/tags/${e}`,method:"PATCH",secure:!0,format:"json",...t})};teams={getTeamList:(e,t={})=>this.request({path:`/teams_page_${e?.page}`,method:"GET",secure:!0,format:"json",...t}),postTeamList:(e={})=>this.request({path:"/teams",method:"POST",secure:!0,format:"json",...e}),getTeamPrivate:(e,t={})=>this.request({path:"/teams/me",method:"GET",query:e,secure:!0,format:"json",...t}),deleteTeamPrivate:(e,t={})=>this.request({path:"/teams/me",method:"DELETE",query:e,secure:!0,format:"json",...t}),postTeamPrivate:(e,t={})=>this.request({path:"/teams/me",method:"POST",body:e,secure:!0,type:"application/json",format:"json",...t}),patchTeamPrivate:(e,t={})=>this.request({path:"/teams/me",method:"PATCH",body:e,secure:!0,format:"json",...t}),getTeamPrivateAwards:(e={})=>this.request({path:"/teams/me/awards",method:"GET",secure:!0,...e}),getTeamPrivateFails:(e={})=>this.request({path:"/teams/me/fails",method:"GET",secure:!0,...e}),getTeamPrivateMembers:(e={})=>this.request({path:"/teams/me/members",method:"GET",secure:!0,...e}),postTeamPrivateMembers:(e={})=>this.request({path:"/teams/me/members",method:"POST",secure:!0,...e}),getTeamPrivateSolves:(e={})=>this.request({path:"/teams/me/solves",method:"GET",secure:!0,...e}),getTeamPublic:(e,t={})=>this.request({path:`/teams/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteTeamPublic:(e,t={})=>this.request({path:`/teams/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchTeamPublic:(e,t={})=>this.request({path:`/teams/${e}`,method:"PATCH",secure:!0,format:"json",...t}),getTeamPublicAwards:(e,t={})=>this.request({path:`/teams/${e}/awards`,method:"GET",secure:!0,...t}),getTeamPublicFails:(e,t={})=>this.request({path:`/teams/${e}/fails`,method:"GET",secure:!0,...t}),deleteTeamMembers:(e,t={})=>this.request({path:`/teams/${e}/members`,method:"DELETE",secure:!0,...t}),getTeamMembers:(e,t={})=>this.request({path:`/teams/${e}/members`,method:"GET",secure:!0,...t}),postTeamMembers:(e,t={})=>this.request({path:`/teams/${e}/members`,method:"POST",secure:!0,...t}),getTeamPublicSolves:(e,t={})=>this.request({path:`/teams/${e}/solves`,method:"GET",secure:!0,...t})};tokens={getTokenList:(e={})=>this.request({path:"/tokens",method:"GET",secure:!0,format:"json",...e}),postTokenList:(e={})=>this.request({path:"/tokens",method:"POST",secure:!0,format:"json",...e}),getTokenDetail:(e,t={})=>this.request({path:`/tokens/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteTokenDetail:(e,t={})=>this.request({path:`/tokens/${e}`,method:"DELETE",secure:!0,format:"json",...t})};topics={deleteTopicList:(e,t={})=>this.request({path:"/topics",method:"DELETE",query:e,secure:!0,format:"json",...t}),getTopicList:(e,t={})=>this.request({path:"/topics",method:"GET",query:e,secure:!0,format:"json",...t}),postTopicList:(e={})=>this.request({path:"/topics",method:"POST",secure:!0,format:"json",...e}),getTopic:(e,t={})=>this.request({path:`/topics/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteTopic:(e,t={})=>this.request({path:`/topics/${e}`,method:"DELETE",secure:!0,format:"json",...t})};unlocks={getUnlockList:(e,t={})=>this.request({path:"/unlocks",method:"GET",query:e,secure:!0,format:"json",...t}),postUnlockList:(e,t={})=>this.request({path:"/unlocks",method:"POST",body:e,secure:!0,type:"application/json",format:"json",...t})};users={getUserList:(e,t={})=>this.request({path:"/users",method:"GET",query:e,secure:!0,format:"json",...t}),postUserList:(e,t={})=>this.request({path:"/users",method:"POST",query:e,secure:!0,format:"json",...t}),getUserPrivate:(e={})=>this.request({path:"/users/me",method:"GET",secure:!0,format:"json",...e}),patchUserPrivate:(e,t={})=>this.request({path:"/users/me",method:"PATCH",body:e,secure:!0,format:"json",...t}),getUserPrivateAwards:(e,t={})=>this.request({path:"/users/me/awards",method:"GET",query:e,secure:!0,...t}),getUserPrivateFails:(e={})=>this.request({path:"/users/me/fails",method:"GET",secure:!0,...e}),getUserPrivateSolves:(e={})=>this.request({path:"/users/me/solves",method:"GET",secure:!0,...e}),getUserPublic:(e,t={})=>this.request({path:`/users/${e}`,method:"GET",secure:!0,format:"json",...t}),deleteUserPublic:(e,t={})=>this.request({path:`/users/${e}`,method:"DELETE",secure:!0,format:"json",...t}),patchUserPublic:(e,t={})=>this.request({path:`/users/${e}`,method:"PATCH",secure:!0,format:"json",...t}),getUserPublicAwards:(e,t={})=>this.request({path:`/users/${e}/awards`,method:"GET",secure:!0,...t}),postUserEmails:(e,t={})=>this.request({path:`/users/${e}/email`,method:"POST",secure:!0,format:"json",...t}),getUserPublicFails:(e,t={})=>this.request({path:`/users/${e}/fails`,method:"GET",secure:!0,...t}),getUserPublicSolves:(e,t={})=>this.request({path:`/users/${e}/solves`,method:"GET",secure:!0,...t})}}const g="",o=C({ctfd:new j({baseUrl:`${g}/api/v1`}),isLoggedIn:$(),selectedCategory:null,selectedChallenge:null});async function D(){o.ctfd=new j({baseUrl:`${g}/api/v1`}),o.isLoggedIn||(o.isLoggedIn=$()),await P()}async function P(){try{const a=await o.ctfd.auth.getCsrfToken();return a.ok&&a.data.csrf_token?(o.csrfToken=a.data.csrf_token,o.csrfToken):(console.error("Failed to fetch CSRF token"),"")}catch(a){return console.error("Error fetching CSRF token:",a),""}}async function O(){return typeof o.csrfToken>"u"&&(o.csrfToken=await P()),o.csrfToken}function $(){return typeof window>"u"?!1:(localStorage.getItem("ctfd_isLoggedIn"),!0)}function k(a){typeof window>"u"||localStorage.setItem("ctfd_isLoggedIn","true")}async function A(){return o.isLoggedIn===!1?!1:(o.ctfd.users.getUserPrivate().then(a=>{a.ok&&a.data.success&&E(!0)}).catch(a=>{if(E(!1),!(a.status===401||a.status===403))throw new Error("Failed to connect to CTFd")}),o.isLoggedIn)}function E(a){o.isLoggedIn=a,k()}async function U(){o.ctfd.auth.getLogout({baseUrl:`${g}`}).then(async()=>{await A()}).catch(a=>{console.error("Failed to log out:",a)})}function H(a){switch(a){case"auth.confirm":i("/confirm");break;case"auth.login":i("/login");break;case"challenges.listing":i("/missions");break;case"teams.private":i("/profile");break;case"views.settings":i("/profile");break;case"views.static_html":i("/");break;default:console.warn(`Unhandled redirect: ${a}`);break}}export{E as a,O as g,H as h,D as i,U as l,P as r,o as s,A as u};
